7/24

노드와 링크로 이루어진 자료구조 = 트리
링크드 리스트 역시 트리의 한 형태

이진트리는 모든노드의 차일드 노드가 2개 이하인 경우 이진트리하고 함.

Node{
int key;
int data;
Node left;
Node right;
}

이진트리 순회
검색을 위하여 모든 노드를 방문하는 것을 순회라 부르며 
순회의 방법에는 다음과 같이 세 가지가 있다. 
전위 중위 후위

전위 : 루트 왼쪽 오른쪽
중위 : 왼쪽 루트 오른쪽
후위 : 왼쪽 오른쪽 루트 


https://marobiana.tistory.com/83
순회

이진 탐색트리
이진트리 중 모든 자료가 정렬되어 있는 경우 이진탐색트리라고 함.

트리 내에 같은 값을 가지는 노드가 없다.
왼쪽 차일드의 모든 모드는 현재 노드보다 작다.
오른쪽 차일드의 모든 모드는 현재 노드보다 크다.

이진탐색트리의 성능이 최하일 때 트리의 형태는 무엇인가?
편향이라고 함. 


이진탐색트리의 추가 및 삭제 

삭제는 경우의 수가 3가지가 있음
1. 리프노드일 때 
2. 자식노드수가 1개 일 때	
3. 자식 노드 수가 2개 일 때   



uplink 란것도 있는데 잘 쓰이지는 않음


AVL 트리

장점 : 검색 성능이 o(log N)으로 보장
단점 : 삽입과 삭제 시 균형을 재조정하는 추가 연산이 필요하다. 

균형치 ( balance factor)
모든 노드의 왼쪽과 오른쪽 서브트리 높이 차가 1을 넘지 않으려면 왼쪽 서브트리 깊이 - 오른쪽 서브트리 깊이 값을 보관.
이 값을 균형치라 부르며 균형치가 -1~1을 넘는 노드는 재조정 대상이다.
모든 최하위의 균형치는 항상 0이다 


노트 메모 


