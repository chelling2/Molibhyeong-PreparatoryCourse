리스트와 튜플 사용 
리스트는 데이터 변경 가능하지만
튜플은 데이터 변경 불가함 
공통점은 타입 제한이 없다는거 무슨 타입 다 들어감 

리스트로 변수 값 저장할 때 대괄호 묶어주고 각 값은 콤마로 구분.
ex ) 리스트 = [값,값,값,값]

float 등등 값 변경 가능하다는거.

여러가지 자료형 나열 가능 


빈 리스트 만들기

c=list()
c=[]

range를 사용하여 리스트 만들기
range는 연속된 숫자를 생성하는데 10을 지정하면 0부터 9까지 
range(10)      10은 끝값 -1이라고 생각하면 됨. 
range(0,10)

a= list(range(10))
a 입력시
리스트로 0부터 9까지 출력 

range(5,12) 하면 즉, 5부터 11까지 저장함 

range(시작,끝,증가폭)
range(-4,10,2)
경우 -4부터 8까지 

튜플은 간단하게 읽기전용 리스트라고 보면 됨 
()  소괄호 사용.

(38) 이건 튜플아님

(38,) 
38,   
이거 다 튜플임 

반대로 리스트안에 튜플 넣을 수 있음 
튜플안에 리스트도 넣기 가능 

특정 값이 있는지 확인하기 
in

a= [30~~~~]
30 in a 하면
true 나옴

not in 도 있음 

시퀀스 객체 연결하기 
+ 연산자를 이용하여 연결함 
새로운 객체가 만들어짐 

range만 사용해서 +연산자 사용은 불가. 

리스트안에 range선언해서 + 사용은 가능 

리스트 *3 하면 세개의 리스트 새로운걸 만듬 

요소 개수 구하기
len()


인덱스 접근 할 떄 
a[1]   혹은    a.__getitem__(1)

음수인덱스 지정 가능 
a[-1] 하면 뒤에서 첫번째 요소 

01234
-5-4-3-2-1


del 키워드 + 리스트 및 첨자로를 사용하여 원소 지우기 가능

슬라이스 사용하기 

시퀀스객체[시작인덱스:끝인덱스]
시작인덱스부터 끝인덱스 -1 까지 잘라서 새 리스트를 만듦


[시작인덱 : 끝인덱 : 증가폭 ] 

[ : 7 ]
시작 안쓰면 끝 0부터 

[7:]
끝 안쓰면 끝까지 

[:]
처음부터 끝까지 

딕셔너리 사용하기 
{ }    키 : 값 형식 

키가 중복되면 가장 뒤에 있는 값만 사용함 

중복되는 키는 저장되지 않음 

lux= {'health':490, 'mana' : 334}

lux['health'] 하면
490 출력

lux
전체 출력 

마찬가지로 키 설정할 때 타입 제한이 없음 

딕셔너리 만들기
{}
dict()

dict(zip([] ,[]))   zip함수로 키값과 벨류 값 따로 작성할 수도 있음 
마찬가지로 첨자에 키값 넣어서 값변경 가능함 

키 개수 구할 땐 len함수~ 

if문 쓸 때는 
if 비가 온다면 :
	print("zzz)"

내용문 안에 pass 쓰면 나중에 추가할 수 있다.

elif  ~~ 


for i in reversed(range(10)) 	

리버스드 쓰면 숫자 거꾸로 






